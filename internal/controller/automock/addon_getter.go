// Code generated by mockery v1.0.0
package automock

import internal "github.com/kyma-project/helm-broker/internal"
import mock "github.com/stretchr/testify/mock"

// AddonGetter is an autogenerated mock type for the AddonGetter type
type AddonGetter struct {
	mock.Mock
}

// Cleanup provides a mock function with given fields:
func (_m *AddonGetter) Cleanup() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCompleteAddon provides a mock function with given fields: entry
func (_m *AddonGetter) GetCompleteAddon(entry internal.IndexEntry) (internal.AddonWithCharts, error) {
	ret := _m.Called(entry)

	var r0 internal.AddonWithCharts
	if rf, ok := ret.Get(0).(func(internal.IndexEntry) internal.AddonWithCharts); ok {
		r0 = rf(entry)
	} else {
		r0 = ret.Get(0).(internal.AddonWithCharts)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(internal.IndexEntry) error); ok {
		r1 = rf(entry)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIndex provides a mock function with given fields:
func (_m *AddonGetter) GetIndex() (*internal.Index, error) {
	ret := _m.Called()

	var r0 *internal.Index
	if rf, ok := ret.Get(0).(func() *internal.Index); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*internal.Index)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
