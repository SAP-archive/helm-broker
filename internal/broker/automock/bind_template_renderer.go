// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import bind "github.com/kyma-project/helm-broker/internal/bind"

import chart "k8s.io/helm/pkg/proto/hapi/chart"
import internal "github.com/kyma-project/helm-broker/internal"
import mock "github.com/stretchr/testify/mock"

// bindTemplateRenderer is an autogenerated mock type for the bindTemplateRenderer type
type bindTemplateRenderer struct {
	mock.Mock
}

// Render provides a mock function with given fields: bindTemplate, instance, _a2
func (_m *bindTemplateRenderer) Render(bindTemplate internal.AddonPlanBindTemplate, instance *internal.Instance, _a2 *chart.Chart) (bind.RenderedBindYAML, error) {
	ret := _m.Called(bindTemplate, instance, _a2)

	var r0 bind.RenderedBindYAML
	if rf, ok := ret.Get(0).(func(internal.AddonPlanBindTemplate, *internal.Instance, *chart.Chart) bind.RenderedBindYAML); ok {
		r0 = rf(bindTemplate, instance, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(bind.RenderedBindYAML)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(internal.AddonPlanBindTemplate, *internal.Instance, *chart.Chart) error); ok {
		r1 = rf(bindTemplate, instance, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
