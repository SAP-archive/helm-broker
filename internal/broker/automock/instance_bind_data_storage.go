// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import internal "github.com/kyma-project/helm-broker/internal"
import mock "github.com/stretchr/testify/mock"

// instanceBindDataStorage is an autogenerated mock type for the instanceBindDataStorage type
type instanceBindDataStorage struct {
	mock.Mock
}

// Get provides a mock function with given fields: iID
func (_m *instanceBindDataStorage) Get(iID internal.InstanceID) (*internal.InstanceBindData, error) {
	ret := _m.Called(iID)

	var r0 *internal.InstanceBindData
	if rf, ok := ret.Get(0).(func(internal.InstanceID) *internal.InstanceBindData); ok {
		r0 = rf(iID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*internal.InstanceBindData)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(internal.InstanceID) error); ok {
		r1 = rf(iID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: _a0
func (_m *instanceBindDataStorage) Insert(_a0 *internal.InstanceBindData) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*internal.InstanceBindData) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Remove provides a mock function with given fields: _a0
func (_m *instanceBindDataStorage) Remove(_a0 internal.InstanceID) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(internal.InstanceID) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
