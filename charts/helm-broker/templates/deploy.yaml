apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      serviceAccountName: {{ template "fullname" . }}

      initContainers:
      - name: "init-{{ .Chart.Name }}"
        image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.alpine_net.dir }}alpine-kubectl:{{ .Values.global.alpine_net.version }}"
        imagePullPolicy: {{ .Values.global.initImage.pullPolicy }}
        command:
          - "sh"
          - "-c"
          - |
            URL=http://helm-broker-etcd-stateful-client.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.etcdClientPort }}/health
            until $(curl --output /dev/null --silent --fail $URL); do
              echo waiting for etcd service at $URL; sleep 1;
            done;
            TILLER=$(kubectl get pod -l app=helm,name=tiller --all-namespaces --field-selector status.phase=Running -o name)
            if [ -z "$TILLER" ]; then
              echo "Tiller Pod for helm does not exist"
              exit 1
            fi

      containers:
      - name: broker
        image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.helm_broker.dir }}helm-broker:{{ .Values.global.helm_broker.version }}"
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        env:
          - name: APP_TMP_DIR
            value: /tmp
          - name: APP_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: APP_PORT
            value: "{{ .Values.global.service.internalPort }}"
          - name: APP_CONFIG_FILE_NAME
            value: /etc/config/helm-broker/config.yaml
          - name: APP_HELM_TILLER_HOST
            value: "tiller-deploy.kube-system.svc.cluster.local:44134"
          - name: APP_HELM_TILLER_TLS_INSECURE
            value: "{{ .Values.broker.tillerTLSInsecure }}"
          - name: APP_CLUSTER_SERVICE_BROKER_NAME
            value: {{ template "fullname" . }}
          - name: APP_HELM_BROKER_URL
            value: http://{{ template "fullname" . }}
          - name: APP_DEVELOP_MODE
            value: "{{ .Values.global.isDevelopMode }}"
        volumeMounts:
        - mountPath: /tmp
          name: tmp-empty-dir
        - mountPath: /etc/config/helm-broker
          name: config-volume
        - mountPath: /etc/certs
          name: helm-certs
          readOnly: true
        ports:
        - containerPort: {{ .Values.global.service.internalPort }}
        # Temporary solution for readiness probe
        # Ref: https://github.com/istio/istio/issues/2628
        readinessProbe:
          exec:
            command:
              - curl
              - localhost:{{ .Values.global.service.internalPort }}/statusz
          failureThreshold: 3
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          exec:
            command:
              - curl
              - localhost:{{ .Values.global.service.internalPort }}/statusz
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1

      - name: ctrl
        image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.helm_broker.dir }}helm-controller:{{ .Values.global.helm_broker.version }}"
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        env:
          - name: APP_TMP_DIR
            value: /tmp
          - name: APP_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: APP_SERVICE_NAME
            value: {{ template "fullname" . }}
          - name: APP_CONFIG_FILE_NAME
            value: /etc/config/helm-broker/config.yaml
          - name: APP_CLUSTER_SERVICE_BROKER_NAME
            value: {{ template "fullname" . }}
          - name: APP_DEVELOP_MODE
            value: "{{ .Values.global.isDevelopMode }}"
          - name: APP_DOCUMENTATION_ENABLED
            value: "{{ .Values.ctrl.documentationEnabled }}"
        volumeMounts:
        - mountPath: /tmp
          name: tmp-empty-dir
        - mountPath: /etc/config/helm-broker
          name: config-volume
        - mountPath: /etc/certs
          name: helm-certs
          readOnly: true
        ports:
        - containerPort: {{ .Values.global.service.internalPort }}
        # Temporary solution for readiness probe
        # Ref: https://github.com/istio/istio/issues/2628
        readinessProbe:
          exec:
            command:
              - curl
              - localhost:{{ .Values.global.service.internalPort }}/statusz
          failureThreshold: 3
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          exec:
            command:
              - curl
              - localhost:{{ .Values.global.service.internalPort }}/statusz
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1

      volumes:
      - name: tmp-empty-dir
        emptyDir:
          sizeLimit: "{{ .Values.global.tmpDirSizeLimit }}"
      - name: config-volume
        configMap:
          name: helm-config-map
      - name: helm-certs
        secret:
          secretName: helm-secret
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
